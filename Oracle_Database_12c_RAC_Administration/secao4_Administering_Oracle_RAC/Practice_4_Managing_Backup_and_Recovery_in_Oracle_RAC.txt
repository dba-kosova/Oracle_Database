

#************************************************#
# OBJETIVO  : oracleRac backup restore recovery	 #
# CRIACAO   : 23-01-2020	                 	 #
# VERSAO    : 1.0		                     	 #
# AUTOR     : Pedro Akira Danno Lima             #
#************************************************#










Practice 4
Managing Backup and Recovery in Oracle RAC
Practice Overview
In this practice you will:
• Enable Archivelog mode in the Oracle RAC database.
• Set backup-related configurations
• Create an automatic backup job
• Set the snapshot control file in a shared location
• Use RMAN to take backup of the RAC database
• Use RMAN to restore Oracle RAC database
Practice Assumptions
The practice assumes that you have the Oracle RAC database up and running in the virtual machines
srv1 and srv2.
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 2
Oracle RAC Administration, a course by Ahmed Baraka
Practice Procedures
A. Enabling Archivelog Mode in Oracle RAC
In the following steps you will set the Oracle RAC database to operate in the archivelog mode. You will
configure the archive log files to be saved in the Fast Recovery Area.
1. In a Putty session, login to srv1 as oracle user. Then login to SQL*Plus as sysdba.
2. Verify that the FRA is enabled.
sqlplus / as sysdba
show parameter DB_RECOVERY_FILE_DEST
3. Perform the steps below to enable the archivelog mode in rac database. The procedure is typically
the same as the procedure to enable the archivelog mode in a single-instance database.
# make sure rac databse is running
srvctl status database -d rac
# stop the database
srvctl stop database -d rac -o immediate
srvctl status database -d rac
# start the database in mount state
srvctl start database -d rac -o mount
# using sqlplus, login as sysdba
sqlplus / as sysdba
# verify that the instances are in MOUNT state
SELECT INSTANCE_NAME,STATUS FROM GV$INSTANCE;
# verify that the database is operating in NOARCHIVE mode
ARCHIVE LOG LIST;
# define the destination of the archive log files
ALTER SYSTEM SET LOG_ARCHIVE_DEST_1='LOCATION=USE_DB_RECOVERY_FILE_DEST'
SCOPE=SPFILE;
# Note: because OMF is enabled, setting the
# LOG_ARCHIVE_FORMAT parameter has no effect.
# enable the archivelog mode
ALTER DATABASE ARCHIVELOG;
# restart the database
srvctl stop database -d rac
srvctl start database -d rac
# verify that the archivelog is enabled
sqlplus / as sysdba
archive log list
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 3
Oracle RAC Administration, a course by Ahmed Baraka
# login as sysdba to each instance and switch the log file
ALTER SYSTEM SWITCH LOGFILE;
conn sys/oracle@rac2 as sysdba
ALTER SYSTEM SWITCH LOGFILE;
# checkout the generated archive log file
# you should see two files. One generated by thread 1 (rac1) and the other one is
# generated by thread 2 (rac2)
SELECT NAME FROM V$ARCHIVED_LOG;
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 4
Oracle RAC Administration, a course by Ahmed Baraka
B. Make Backup-related Configurations
In this section of the practice, you will set some configurations that are related to using RMAN for
backup and recovery operations.
4. Using SQL*Plus utility, connect to srv1 as sysdba and set the CONTROL_FILE_RECORD_KEEP_TIME
parameter to 30 days.
If you do not use a recovery catalog database, RMAN keeps record of the generated archive logs
in the control file. By default, Oracle deletes the entries from the control file that are older than 7
days. If your recovery window is longer than this period, you have to increase the value of
CONTROL_FILE_RECORD_KEEP_TIME parameter to accommodate your recovery target.
SHOW PARAMETER CONTROL_FILE_RECORD_KEEP_TIME
ALTER SYSTEM SET CONTROL_FILE_RECORD_KEEP_TIME=30 SCOPE=BOTH SID='*';
5. Using RMAN, login to the local instance as target database.
rman target /
6. Set the following RMAN configuration to automatically back up the control file and the SPFILE
each time any backup operation is performed.
Note: because FRA is configured in the database, the autobackup control files will be saved by
default in it.
SHOW CONTROLFILE AUTOBACKUP;
CONFIGURE CONTROLFILE AUTOBACKUP ON;
7. Configure RMAN channels to use automatic load balancing by setting the parallelism to 2.
If you enable the parallelism in a RAC database, Oracle 12c enable the automatic load balancing
in RMAN. This means RMAN may use more than one instance to perform a backup job.
Alternatively, you can manually allocate more than one channel and connect each channel to a
different node. You will use this method in a later section.
SHOW DEVICE TYPE;
CONFIGURE DEVICE TYPE DISK PARALLELISM 2;
8. Specify that RMAN keep a minimum one backup.
This is not the recommended setting in real life scenario. We are using this setting to take the
least possible disk space from the virtual machine.
CONFIGURE RETENTION POLICY TO REDUNDANCY 1;
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 5
Oracle RAC Administration, a course by Ahmed Baraka
C. Creating an Automatic Backup Job
In the following steps you will create a job that automatically takes backup of the whole database,
takes backup of all the archive logs, and then deletes the archive logs. In the end, it deletes the
obsolete backupsets files. The job runs every four hours starting from midnight.
9. Create a script that calls RMAN and executes the backup script, as follows:
vi /home/oracle/scripts/rman_script.sh
#!/bin/bash
ORACLE_SID=rac1; export ORACLE_SID
ORACLE_HOME=/u01/app/oracle/product/12.1.0/db_1; export ORACLE_HOME
$ORACLE_HOME/bin/rman log=/home/oracle/scripts/rman.log append <<EOF
connect target /;
set echo on;
run { backup as backupset full database;
 backup archivelog all delete input;
 delete noprompt obsolete;
}
Exit;
EOF
10.Set the execution permission on the file.
chmod 774 /home/oracle/scripts/rman_script.sh
11. Open the oracle account crontab file and add the line that follows to it.
This setting executes the backup script every 4 hours starting from midnight.
# execute the following command:
crontab -e
# add the following line to it:
* 0,4,8,12,16,20 * * * "/home/oracle/scripts/rman_script.sh" > /dev/null
12. Execute the script to make sure it is working fine.
/home/oracle/scripts/rman_script.sh
13.Check out the contents of the log file.
If there is any error reported in the log file, fix it and perform the previous step again.
vi /home/oracle/scripts/rman.log
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 6
Oracle RAC Administration, a course by Ahmed Baraka
D. Setting the Snapshot Control File in a Shared Location
In this section of the practice, you will configure RMAN to save the snapshot control file in a shared
location accessible by all RAC instances.
Why this is important?
Snapshot control file is used by RMAN when synchronization the recovery repository or backing up the
control file. By default, snapshot control file is saved in an operating system specific location. As you
will see in this section of the practice, every instance has its own copy of the snapshot control file
saved under ORACLE_HOME directory.
Therefore, if you keep taking backups by connecting to srv1 (as an example), then the snapshot
control file will be generated only in srv1.
Oracle highly recommends configuring the location of the snapshot control file in a shared location
that is accessible by all the RAC nodes.
14. In srv1, invoke rman and login to the local instance as target.
rman target /
15. Check out the current location of the snapshot control file.
Observe that the snapshot control file is saved in a local location in srv1 and takes the format
snapcf_<ORACLE_SID>.f
SHOW SNAPSHOT CONTROLFILE NAME;
16. Make sure that the snapshot control file exists in srv1.
The file has been created automatically by rman when you backed up the database earlier in this
practice.
host 'ls -l /u01/app/oracle/product/12.1.0/db_1/dbs/snapcf_rac1.f';
17. Open a new Putty session to srv2, login as oracle, invoke rman, login to the local instance as
target, and show the SNAPSHOT CONTROLFILE NAME
su - oracle
rman target /
SHOW SNAPSHOT CONTROLFILE NAME;
18. Check if there is any snapshot control file generated in srv2.
If you do not see a snapshot control file in srv2, it is because no backup has ever been created
before by the instance in srv2. In this case, if in the future you need to use srv2 for some
recovery scenarios, the recovery option may fail because the snapshot control file is not
accessible to it.
host 'ls -l /u01/app/oracle/product/12.1.0/db_1/dbs/snapcf_rac2.f';
19. Change the location of the snapshot control file to FRA disk group. This can be run from RMAN in
srv1 or srv2.
This configuration change will be seen by all the RAC instances. No need to run it from every
instance.
CONFIGURE SNAPSHOT CONTROLFILE NAME TO '+FRA/RAC/AUTOBACKUP/snapcf_rac.f';
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 7
Oracle RAC Administration, a course by Ahmed Baraka
20. In RMAN session in srv1, take a backup of the control file.
Snapshot control file is not the backup taken for the control file. Oracle creates the snapshot
control file and then creates the backup out of it.
backup current controlfile;
21. Verify that the snapshot control file has been successfully created in the new location.
su - grid
asmcmd
ls FRA/RAC/AUTOBACKUP/snapcf_rac.f
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 8
Oracle RAC Administration, a course by Ahmed Baraka
E. Using RMAN to Take Backup of the RAC Database
In this section of the practice, you will use RMAN utility to take an online backup of the entire RAC
database.
Note: there is not major differences between the general backup and recovery procedures in a RAC
database and in a single-node database. Covering all the backup and recovery scenarios in an Oracle
database is beyond the scope of this course.
22. Switch the current user to oracle, invoke RMAN, login to the local instance as target and perform
a full database backup with the archive logs.
su – oracle
rman target /
BACKUP DATABASE PLUS ARCHIVELOG TAG FULDB3092017;
23. Analyze the output of the previous command. You should see two channels which created the
backupset. The inputs of each channel should be from the same local instance. Observe also that
the location of the backup pieces is in the FRA disk group.
Note: If you want to enable parallelism from multiple instances, you have to connect to target
database using a load-balancing-enabled service. You will learn how to create a service and
enable the load balancing in it later in the course.
24. Check out the backupset files generated as RMAN backup files. You should see backupsets
generated as backup of the datafiles, archived redo log files, and the control file plus the SPFILE.
LIST BACKUPSET;
25. Just to save disk space, delete the obsolete backupsets.
DELETE OBSOLETE;
26. Exit from RMAN
Practice 4 Managing Backup and Recovery in Oracle RAC Page | 9
Oracle RAC Administration, a course by Ahmed Baraka
F. Using RMAN to Restore Oracle RAC Database
In this section of the practice, you will use RMAN utility to restore the RAC database from the backup
taken in the previous section.
Note: if you want to use load balancing feature in RMAN recovery, PARALLELISM configuration has
practically no effect in recovery operations. You have to manually allocate channels to specific nodes,
as shown in the code examples below.
27. Shutdown the rac database then start it up in mount mode.
srvctl stop database -d rac -o immediate
srvctl start database -d rac -o mount
28. Invoke RMAN, login to the local instance as target, and issue the recovery run block as shown in
the following code.
Note: If you want to disable the media recovery parallelism for a specific command, you can use
the NOPARALLEL clause of the RMAN RECOVER command.
rman target /
run
{ ALLOCATE CHANNEL c1 DEVICE TYPE disk CONNECT 'sys/oracle@rac1';
 ALLOCATE CHANNEL c2 DEVICE TYPE disk CONNECT 'sys/oracle@rac2';
 RESTORE DATABASE;
 RECOVER DATABASE;
}
29. Analyze the output of the command. Observe the two channels that worked in parallel to restore
the database.
30. Re-start the database.
srvctl stop database -d rac
srvctl start database -d rac






#****************************************************************************************************************#
#                                                   REFERENCIAS      	                                         #
#https://www.udemy.com/course/oracle-database-12c-rac-administration/learn/lecture/8874172#questions        	 #
#https://www.vivaolinux.com.br/topico/Red-Hat-Fedora/Como-configurar-teclado-para-ABNT2                          #
#https://github.com/pedroAkiraDanno/Linux/blob/master/Conceitos_de_Programacao_em_Shell_Script_Curso_Gratuito    #
#https://www.udemy.com/course/conceitos-de-programacao-em-shell-script/learn/lecture/13868716#overview           #
#****************************************************************************************************************#
