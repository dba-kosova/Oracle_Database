ORACLE 11G EXPRESS EDITON (XE) 11g Release 2 (11.2) 
ORACLE LINUX 5.11.0.0.0 ( Oracle Linux )



REFERENCES:
https://www.oracle.com/database/technologies/oracle-database-software-downloads.html
https://www.oracle.com/database/technologies/112010-linx8664soft.html


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Instalacao SO (ORACLE LINUX)
https://edelivery.oracle.com/osdc/faces/SoftwareDelivery
Oracle Linux 5.11.0.0.0 ( Oracle Linux )
operating system requirements


INSTALAÇÃO GRAFICA SEGUINDO DOCUMENTAÇAO ORACLE ESSENTIONS UDEMY


Instalar e configurar Oracle Linux(SO) - (Oracle Preinstallation RPM)


Oracle Linux 5,and Red Hat Enterprise Linux 5 should be installed:
REFERENCIA: https://docs.oracle.com/cd/E11882_01/install.112/e24324.pdf pag.09
(rpm -Uvh) - adicionar no começo dos pacotes para instalção 
binutils-2.17.50.0.6
compat-libstdc++-33-3.2.3
elfutils-libelf-0.125
elfutils-libelf-devel-0.125
elfutils-libelf-devel-static-0.125
gcc-4.1.2
gcc-c++-4.1.2
glibc-2.5-24
glibc-common-2.5
glibc-devel-2.5
glibc-headers-2.5
kernel-headers-2.6.18
ksh-20060214
libaio-0.3.106
libaio-devel-0.3.106 
libgcc-4.1.2
libgomp-4.1.2
libstdc++-4.1.2 
libstdc++-devel-4.1.2
make-3.81
sysstat-7.0.2


To determine whether the required packages are installed, enter commands similar to the following:
# rpm -q package_name


Note:
-Oracle recommends that you install your Linux operating system with the default software packages (RPMs), unless you specifically intend to perform a minimal installation, and follow the directions for performing such an installation to ensure that you have all required packages for Oracle software.

-Oracle recommends that you do not customize RPMs during a default operating system installation. A defaultinstallation includes most required packages, and helps you to limit manual checks of package dependencies.

-If you did not perform a default Linux installation, you intend to use LDAP, and you want to use the scripts odisrvreg, oidca, or schemasync, then install the Korn shell RPM for your Linux distribution.

-You must install the packages (or later versions) listed in the following table. Also, ensure that the list of RPMs and all the prerequisites for these RPMs are installed.



ou instalação automatica dos packets necessarios 
REFERENCIA:
https://oracle-base.com/articles/11g/oracle-db-11gr2-installation-on-oracle-linux-6
http://public-yum.oracle.com/
https://www.oracle.com/technetwork/articles/servers-storage-admin/ginnydbinstallonlinux-488779.html


# yum install oracle-rdbms-server-11gR2-preinstall

# yum update


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------






-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Creating Required Operating System Groups and Users
REFERENCES: https://docs.oracle.com/cd/E11882_01/install.112/e24326.pdf



The following local operating system groups and users are required if you are 
installing Oracle Database:
-The Oracle Inventory group (typically,oinstall)
-The OSDBA group (typically,dba)
-The Oracle software owner (typically,oracle)
-The OSOPER group (optional. Typically,oper)


To determine whether these groups and users exist, and if necessary, to create them, 
follow these steps:


1.To determine whether the oinstall group exists, enter the following command:
more /etc/oraInst.loc
ou
cat /etc/group | grep oinstall


If the output of this command shows the oinstall group name, then the group exists.
inventory_loc=/u01/app/oraInventory
inst_group=oinstall


The inst_group parameter shows the name of the Oracle Inventory group, oinstall.


2.To determine whether the dba group exists, enter the following command
# grep dba /etc/group
or 
cat /etc/group | grep dba

If the output from this commands shows the dba group name, then the group exists.


3.If necessary, enter the following commands to create the oinstall and dba groups:
# /usr/sbin/groupadd oinstall
# /usr/sbin/groupadd dba


4.To determine whether the oracle user exists and belongs to the correct groups, enter the following command:
# id oracle

If the oracle user exists, then this command displays information about the groups to which the user belongs. The output should besimilar to the following, indicating that oinstall is the primary group and dba is a secondary group:
uid=440(oracle) gid=200(oinstall) groups=201(dba),202(oper)



5.If necessary, complete one of the following actions:
If the oracle user exists, but its primary group is not oinstall or it is not a member of the dba group, then enter the following command: 
# /usr/sbin/usermod -g oinstall -G dba oracle


If the oracleuser does not exist, enter the following command to create it:
# /usr/sbin/useradd -g oinstall -G dba oracle


This command creates the oracle user and specifies oinstall as the primary group and dba as the secondary group.


6.Enter the following command to set the password of the oracle user:
# passwd oracle


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Resursos necessarios (requisitos de hardware para instalação do oracle database e outros serviços)
REFERENCIAS: https://docs.oracle.com/cd/E11882_01/install.112/e24324/toc.htm#CHDCIAAA pagina 3


Checking the Hardware Requirement
-Memory Requirements
-Disk Space Requirements 
-System Architecture 
-Display requirements 


Memory Requirements:

Minimum: 1 GB of RAM

Recommended: 2 GB of RAM or more
To determine the RAM size, enter the following command:
$ grep MemTotal /proc/meminfo
or
$ free -h



Available RAM                  Swap Space Required
Between 1 GB and 2 GB          1.5 times the size of the RAM
Between 2 GB and 16 GB         Equal to the size of the RAM
More than 16 GB                16 GB



To determine whether the system architecture can run the software, enter the 
following command:

uname -m

note:
This command displays the processor type. Verify that the processor architecture matches the Oracle software release to install. If you do not see the expected output, then you cannot install the software on this system.



To determine the size of the configured swap space, enter the following command:

$ grep SwapTotal /proc/meminfo
or
$ free -h



To determine the available RAM and swap space, enter the following command:
$ free


Automatic Memory Management
Starting with Oracle Database 11g, the Automatic Memory Management feature requires more shared memory (/dev/shm) and file descriptors. The shared memory should be sized to be at least the greater of MEMORY_MAX_TARGET and MEMORY_TARGET for each Oracle instance on that computer. 


To determine the amount of shared memory available, enter the following command: # df -h /dev/shm/


Note:MEMORY_MAX_TARGET and MEMORY_TARGET cannot be used when LOCK_SGA is enabled or with HugePages on Linux





Disk Space Requirements:
The following are the disk space requirements for installing Oracle Database 11g Release 2 (11.2)

1 GB of disk space in the /tmp directory

To determine the amount of disk space available in the /tmp directory, enter the following command:
# df -h /tmp


To determine the amount of free disk space on the system, enter the following 
command:
# df -h



The following tables describe the disk space requirements for software files, and data files for each installation type on Linux x86:


Installation Type            Requirement for Software Files (GB)
Enterprise Edition           4.5
Standard Edition             4.4



Installation Type            Requirement for Data Files (GB)
Enterprise Edition           1.7
Standard Edition             1.5






System Architecture
To determine if the system architecture can run the software, enter the following 
command:
# uname -m



Display Requirements
The minimum resolution for Oracle Database 11g Release 2 (11.2) is 1024 x 768 or higher.







4 Checking the Software Requirement
-Operating System Requirements
-Kernel Requirements 
-Package Requirements
-Compiler Requirements
-Additional Software Requirements 


Note:Oracle Universal Installer (OUI) performs checks on the system to verify that it meets the listed requirements. To ensure that these checks pass, verify the requirements before you start Oracle Universal Installer.



4.1  Operating System Requirements
The following or later versions of the operating system are required for Oracle Database 11g Release 2 (11.2):
Asianux Server 3 SP2
Asianux Server 4 SP3
Oracle Linux 4 Update 7
Oracle Linux 5 Update 2
Oracle Linux 6
Red Hat Enterprise Linux 4 Update 7
Red Hat Enterprise Linux 5 Update 2
Red Hat Enterprise Linux 6
SUSE Linux Enterprise Server 10 SP2
SUSE Linux Enterprise Server 11



To determine the distribution and version of Linux installed, enter the following 
command:

# cat /proc/version



Note:Only the distributions and versions listed in the earlier list are 
supported. Do not install the software on other versions of Linux




4.2  Kernel Requirements
The following are the Kernel requirements for Oracle Database 11g Release 2 (11.2):
For Oracle Linux 4 and Red Hat Enterprise Linux 4: 2.6.9 or later
For Asianux Server 3, Oracle Linux 5, and Red Hat Enterprise Linux 5: 2.6.18 or later
For Oracle Linux 6: 2.6.32.100 or later
For Red Hat Enterprise Linux 6 and Asianux Server 4: 2.6.32-71 or later
For SUSE Linux Enterprise Server 10: 2.6.16.21 or late
On SUSE Linux Enterprise Server 11: 2.6.27.19 or late




To determine whether the required kernel is installed, enter the following command:
# uname -r



If the kernel version does not meet the requirement specified earlier in this section, then contact the operating system vend or for information about obtaining and installing kernel updates.





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
6  Configuring Kernel Parameters 


Verify that the kernel parameters shown in the following table are set to values greater than or equal to the minimum value shown. The procedure following the table describes how to verify and set the values.

Note:The kernel parameter and shell limit values in this section are minimum values only. For production database systems, Oracle recommends that you tune these values to optimize the performance of the system. Refer to your operating system documentation for more information about tuning kernel parameters.


Parameter	Minimum  Value		File
PAG 19 TABLE 


Note:If the current value of any parameter is higher than the value listed in this table, then do not change the value of that parameter.


To view the current value specified for these kernel parameters, and to change them if necessary:


Enter commands similar to the following to view the current values of the kernel parameters:
Note:Make a note of the current values and identify any values that you must change.

Parameter	Command
PAG 20 TABLE 



If the value of any kernel parameter is different from the recommended value, then complete the following steps:

1.Using any text editor, create or edit the /etc/sysctl.conf file, and add or edit lines similar to the following:


Note:Include lines only for the kernel parameter values to change. For the semaphore parameters (kernel.sem), you must specify all four values. However, if any of the current values are larger than the minimum value, then specify the larger value. 

#CONFIGURACAO REFERENTE AO ORACLE
fs.aio-max-nr = 1048576
fs.file-max = 6815744
kernel.shmall = 2097152
kernel.shmmax = 536870912
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
#FIM DA CONFIGURACAO DO ORACLE


By specifying the values in the /etc/sysctl.conf file, they persist when you restart the system. However, on SUSE Linux Enterprise Server systems, enter the following command to ensure that the system reads the /etc/sysctl.conf file when it restarts:

# /sbin/chkconfig boot.sysctl on



2.Enter the following command to change the current values of the kernel parameters:
# /sbin/sysctl -p

Review the output from this command to verify that the values are correct. If the values are incorrect, edit the /etc/sysctl.conf file,then enter this command again.

3.Enter the command /sbin/sysctl -a to confirm that the values are set correctly.


4.On SUSE systems only, enter the following command to cause the system to read the/etc/sysctl.conf file when it restarts:
# /sbin/chkconfig boot.sysctl on


5.On SUSE systems only, you must enter the GID of the oinstall group as the value for the parameter /proc/sys/vm/hugetlb_shm_group.Doing this grants  members of oinstall a group permission to create shared memory segments.

For example, where theoinstall group GID is 501:
# echo 501 > /proc/sys/vm/hugetlb_shm_group

After running this command, use vi to add the following textto /etc/sysctl.conf, and enable the boot.sysctl script to run on system restart:

Note:Include lines only for the kernel parametervalues to change. For the semaphore parameters (kernel.sem), you must specify all four values. However, if any of the currentvalues are larger than the minimum value, then specify the larger value. 22vm.hugetlb_shm_group


6.After updating the values of kernel parameters in the /etc/sysctl.conf file, either restart the computer, or run the command 
sysctl -p to make the changes in the /etc/sysctl.conf file available in the active kernel memory.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------






-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Resource Limits
REFERENCIAS: 
https://docs.oracle.com/cd/E11882_01/install.112/e24324/toc.htm#CHDCIAAA pagina 22
https://docs.oracle.com/cd/E26370_01/doc.121/e26358/dbinstall.htm


Check Resource Limits for the Oracle Software Installation Users

On Oracle Linux systems, Oracle recommends that you install Oracle Preinstallation RPMs to meet preinstallation requirements like configuring your operating system to set the resource limits in the limits.conf  file. Oracle Preinstallation RPM only configures the limits.conf file for the oracle user. If you are implementing Oracle Grid Infrastructure job role separation, then copy the values from the oracle user to the grid user in the limits.conf file.


For each installation software owner, check the resource limits for installation, using 
the following recommended ranges:

TABLE PAG 22


To check resource limits:

Log in as an installation owner.


Check the soft and hard limits for the file descriptor setting. Ensure that the result is in the recommended range. For example:
$ ulimit -Sn
$ ulimit -Hn



Check the soft and hard limits for the number of processes available to a user. 
Ensure that the result is in the recommended range. For example:
$ ulimit -Su
$ ulimit -Hu



Check the soft limit for the stack setting. Ensure that the result is in the recommended range. For example:
$ ulimit -Ss
$ ulimit -Hs



Repeat this procedure for each Oracle software installation owner. 


If necessary, update the resource limits in the /etc/security/limits.conf configuration file for the installation owner. However, note that the configuration file is distribution specific. Contact your system administrator for distribution specific configuration file information.


Note:If the grid or oracle users are logged in, then changes in the limits.conf file do not take effect until you log these users out and log them back in. You must do this before you use these accounts for installation.


vi /etc/security/limits.conf

#CONFIGURACAO REFERENTE AO ORACLE
oracle              soft    nproc   2047
oracle              hard    nproc   16384
oracle              soft    nofile  4096
oracle              hard    nofile  65536
oracle              soft    stack   10240
#oracle             hard    stack   10240
#FIM DA CONFIGURACAO DO ORACLE
REFERENCES: https://docs.oracle.com/cd/E26370_01/doc.121/e26358/dbinstall.htm

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------






-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
7  Creating Required Directories
REFERENCES: https://docs.oracle.com/cd/E11882_01/install.112/e24324.pdf


Create directories with names similar to the following, and specify the correct owner, 
group, and permissions for them:
-The Oracle base directory
-An optional Oracle data file directory




The Oracle base directory must have 4 GB of free disk space, or 6 GB of free disk space if you choose not to create a separate Oracle data file directory.


Note:If you do not want to create a separate Oracle data file directory, then you can install the data filesin a subdirectory of the Oracle base directory. However, this is not recommended for production databases.



To create the Oracle base directory:
Enter the following command to display information about all mounted file systems:
# df -h


This command displays information about all the file systems mounted on the system, including:
-The physical device name
-The total amount, used amount, and available amount of disk space
-The mount point directory for that file system


2.From the display, identify either one or two file systems that meet the disk space requirements mentionedearlier in this section. 


3.Note the name of the mount point directory for each file system that you identified.


4.Enter commands similar to the following to create the recommended subdirectories in the mount point directory that you identified and set the appropriate owner, group, and permissions on them:

# mkdir -p /mount_point/app/
# chown -R oracle:oinstall /mount_point/app/
# chmod -R 775 /mount_point/app/



For example:
# mkdir -p /u01/app/
# chown -R oracle:oinstall /u01/app/
# chmod -R 775 /u01/app/

















Criação de diretoiros e pastas padrão - (Optimal Flexible Architecture)

Optimal Flexible Architecture
REFERENCES: https://docs.oracle.com/cd/E11882_01/install.112/e47689.pdf


This appendix describes the Optimal Flexible Architecture (OFA) standard. This standard is a set of configuration guide lines created to ensure well organized Oracle installations that are easier to maintain. It includes information about the following topics:
-Overview of the Optimal Flexible Architecture Standard
-Implementing Optimal Flexible Architecture



Overview of the Optimal Flexible Architecture Standard

The Optimal Flexible Architecture standard helps you to organize database software and configure databases toallow multiple databases, of different versions, owned by different users to coexist. Optimal Flexible Architecture assists in identification of ORACLE_BASE with its Automatic Diagnostic Repository (ADR)diagnostic data to properly collect incidents.

All Oracle components on the installation media arecompliant with Optimal Flexible Architecture. Oracle Universal Installer places Oracle Database componentsin directory locations, assigning the default permissions that follow Optimal Flexible Architecture guidelines.



Oracle recommends that you use Optimal Flexible Architecture, especially if the 
database is huge, or if you plan to have multiple databases.




Advantages of Multiple Oracle Homes and OFA

When you install Oracle database, you are  installing a large application that your computer can support.Using multiple Oracle homes and Optimal Flexible Architecture provides many advantages when administering large databases. The following advantages are important:

-Structured organization of directories and files, and consistent naming for database files simplify database administration.

-Distribution of I/O across  multiple disks prevents performance bottlenecks caused by multiple read or write commands issued simultaneously to a single drive.

-Distribution of applications across multiple disks safeguards against database failures.

-Login home directories are not at risk when database administrators add, move, or delete Oracle home directories.

-Multiple databases, of different versions, owned by different users can coexist 
concurrently

-Software upgrades can be tested in an Oracle home in a separate directory from the Oracle home where your production database is located.



Implementing Optimal Flexible Architecture
This section describes the naming strategy recommended by the Optimal Flexible Architecture standard. It contains the following sections:
-File Systems
-Naming Directories
-Naming Database Files
-Separating Segments with Different Requirements 
-Exploiting the Optimal Flexible Arquichitecture Structura the Oracle Files
-Optimal Flexible Arquiteture File Mapping 



File Systems
The following sections describe the conventions for mount points:
-Number of File Systems 
-Naming Conventions 



Number of File Systems
To fully implement the Optimal Flexible Architecture recommendations for a database stored on file systems that are not striped or mirrored, you require at least three file systems located on separate physical devices.


Naming Conventions
Name all file system mount points using the syntax/pm, where p is a string constant and m is a unique fixedlength key (typically a two-digit number) used to distinguish each mount point. For example: /u01 and/u02, or /disk01 and /disk02


Naming Directories
The following sections describe the naming conventions for directories that are compliant with the Optimal Flexible Architecture standard:
- Oracle Base Directory Naming Convetion 
- Naming Mount Points for Very Large Database (VLDBs)
- Referring to Path names
- Oracle Home Directory Naming Convention 
- Naming Subdirectories 




Note:Ensure that the paths you select for Oracle software, such as the Oracle home path and the Oracle base path, use only ASCII characters. Because installation owner names are used by default for some paths,this ASCII character restriction applies to user names, file names, and directory names.



Oracle Base Directory Naming Convention
The Oracle Base directory is the top level directory that you can use to install the various Oracle software products. You can use the same Oracle base directory for multiple installations. If different operating system users install Oracle software on the same system, then each user must create a separate Oracle base directory.Name Oracle base directories using the syntax /pm/s/u. Ta b l e D – 1 describes the variables used in this syntax.


Table D–1 Syntax for Naming Oracle Base Directories 
Variable     Description
pm	     A mount point name
s	     A standard directory name
u	     The name of the owner of the directory (the user running Oracle Universal Installer)

For example, /u01/app/oracle is an Oracle base directory created by the oracle user and /u01/app/applmgr is an Oracle base directory created by the applmgr user.


Placing Oracle base directories at the same level in the UNIX file system is advantageous because it enables you to refer to the collection of Oracle base directories on different mount points using a single pattern matching string, /*/app/*.



Naming Mount Points for Very Large Databases (VLDBs)

If each disk drive contains database files from one application and there are enough drives for each database to prevent I/O bottlenecks, use the syntax /h/q/d for naming mount points. Ta b l e D – 2 describes the variables used in this syntax.


Table D–2 Syntax for Naming Mount Points for Very Large Databases
Variable		Description
h			Oracle base directory
q			A string denoting that Oracle data is stored in this directory, for example, oradata
d			The value of the initialization parameter DB_NAME (typically the same as the instance SID for single-instance databases)


For example, to allocate two drives exclusively for the test database, name the mount points /u01/app/oracle/oradata/test and /u02/app oracle/oradata/test.



Referring to Path Names Refer to explicit path names only in files designed specifically to store them, such as the password file, /etc passwd, and the Oracle oratab file. Refer to group memberships only in the /etc/group file.



Oracle Home Directory Naming Convention
To help fulfill the Optimal Flexible Arch itecture requirement of simultaneously  running multiple versions of Oracle software, install the software in a directory  matching the pattern  / pm / s / u /product/ v / type _[ n ] .


Table D–3 describes the variables used in this syntax.




Table D–3 Syntax for Naming Oracle Home Directories 
Variable	Description
pm		A mount point name
s		A standard directory name	
u		The name of the owner of the directory
v		The version of the software
type		The type of installation, for example Database (dbhome_1), Client (client), or Oracle Grid Infrastructure (grid)
n		An optional counter, which enables you to install the same product more than once in the same Oracle base directory



For example:
/u01/app/oracle/product/11.2.0/dbhome_1 indicates the Oracle home directory for the first installation of Oracle Database on this system.

the ORACLE_HOME environment variable is set to the Oracle home directory.



Naming Subdirectories 
To facilitate the organization of administra tive data, Oracle recommends that you store  database-specific administration files in subdirectories matching the pattern  / h /admin/ d / a / , where  h  is the Oracle base directory,  d  is the database name (DB_ NAME), and  a  is a subdirectory for specific types of database administration files.  Ta b l e D – 4  describes the database admini stration file subdirectories.



table D–4 Subdirectories for Database Administration Files 
Subdirectory		 Description
arch			 Archived redo log files
adump		         Audit files (Set the AUDIT_FILE_DEST initialization parameter to specify the adump directory. Clean out this 
                         subdirectory periodically
create			 Contains database creation log files and scripts used to create the database.
dpdump			 Default directory for data pump operations. Contains the data pump file dp.log
exp			 Database export files
logbook			 Files recording the status and history of the database
pfile			 Instance parameter files	
scripts		         Ad hoc SQL scripts




For example,  /u01/app/oracle/admin/orcl/scripts/  is the  scripts  subdirectory  associated with the database named  orcl.


In Oracle Database 11 g , Automatic Diagnostic Repository (ADR) directories replace  the  bdump, cdump,  and  udump  directories. The ADR diagnostic data goes into the  /h/diag/rdbms/d/i/  directory by default.


where
h is Oracle Base
d is the database name
i is the instance name. 



The ADR home has the trace, alert,  and incident sub-directories.  Ta b l e D – 5  describes  the ADR directories.


Table D–5 Locations for Diagnostic Traces
Diagnostic Data				10g Location			11g Location
Foreground Process traces		user_dump_dest			ADR_HOME/trace/
Background Process traces		background_dump_dest 		ADR_HOME/trace/
Alert Log Datas				background_dump_dest		ADR_HOME/alert/
Core 					core_dump_dest			ADR_HOME/incident/In/
Incident Dumps			        user_dump_dest or 
					background_dump_dest 
					depending on the process        ADR_HOME/incident/In/	





Naming Database Files			
The following table lists the recommended file naming conventions for database files:

Note: Oracle Managed Files (OMF) and files stored in Oracle  Automatic Storage Management disk  groups use different naming  conventions. For more information about these naming conventions,  refer to  Oracle Database Administrator's Guide


File Type			File Naming Convention
Control files			/ h / q / d /control.ctl
Redo log files 			/ h / q / d /redo n .log 
Data files 			/ h / q / d / tn .dbf



The following table describes this syntax:
Variable	Description
h		Oracle base directory




-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


























